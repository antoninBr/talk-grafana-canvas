global:
  # -- Overrides the Docker registry globally for all images
  imageRegistry: null

  # To help compatibility with other charts which use global.imagePullSecrets.
  # Allow either an array of {name: pullSecret} maps (k8s-style), or an array of strings (more common helm-style).
  # Can be tempalted.
  # global:
  #   imagePullSecrets:
  #   - name: pullSecret1
  #   - name: pullSecret2
  # or
  # global:
  #   imagePullSecrets:
  #   - pullSecret1
  #   - pullSecret2
  imagePullSecrets: []

rbac:
  create: true
  ## Use an existing ClusterRole/Role (depending on rbac.namespaced false/true)
  # useExistingRole: name-of-some-role
  # useExistingClusterRole: name-of-some-clusterRole
  pspEnabled: false
  pspUseAppArmor: false
  namespaced: false
  extraRoleRules: []
  # - apiGroups: []
  #   resources: []
  #   verbs: []
  extraClusterRoleRules: []
  # - apiGroups: []
  #   resources: []
  #   verbs: []
serviceAccount:
  create: true
  name:
  nameTest:
  ## ServiceAccount labels.
  labels: {}
  ## Service account annotations. Can be templated.
  #  annotations:
  #    eks.amazonaws.com/role-arn: arn:aws:iam::123456789000:role/iam-role-name-here

  ## autoMount is deprecated in favor of automountServiceAccountToken
  # autoMount: false
  automountServiceAccountToken: false

replicas: 1

## Create a headless service for the deployment
headlessService: false

## Should the service account be auto mounted on the pod
automountServiceAccountToken: true

## Create HorizontalPodAutoscaler object for deployment type
#
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPU: "60"
  targetMemory: ""
  behavior: {}

## See `kubectl explain poddisruptionbudget.spec` for more
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget: {}
#  apiVersion: ""
#  minAvailable: 1
#  maxUnavailable: 1

## See `kubectl explain deployment.spec.strategy` for more
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
deploymentStrategy:
  type: RollingUpdate

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName: "default-scheduler"

image:
  # -- The Docker registry
  registry: docker.io
  # -- Docker image repository
  repository: grafana/grafana
  # Overrides the Grafana image tag whose default is the chart appVersion
  tag: "11.0.0"
  sha: ""
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Can be templated.
  ##
  pullSecrets: []
  #   - myRegistrKeySecretName

testFramework:
  enabled: true
  image:
    # -- The Docker registry
    registry: docker.io
    repository: bats/bats
    tag: "v1.4.1"
  imagePullPolicy: IfNotPresent
  securityContext: {}

# dns configuration for pod
dnsPolicy: ~
dnsConfig: {}
  # nameservers:
  #   - 8.8.8.8
  #   options:
  #   - name: ndots
  #     value: "2"
  #   - name: edns0

securityContext:
  runAsNonRoot: false
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

containerSecurityContext:
  allowPrivilegeEscalation: true
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault

# Enable creating the grafana configmap
createConfigmap: true

# Extra configmaps to mount in grafana pods
# Values are templated.
extraConfigmapMounts: []
  # - name: certs-configmap
  #   mountPath: /etc/grafana/ssl/
  #   subPath: certificates.crt # (optional)
  #   configMap: certs-configmap
  #   readOnly: true


extraEmptyDirMounts: []
  # - name: provisioning-notifiers
  #   mountPath: /etc/grafana/provisioning/notifiers


# Apply extra labels to common labels.
extraLabels: {}

## Assign a PriorityClassName to pods if set
# priorityClassName:

downloadDashboardsImage:
  # -- The Docker registry
  registry: docker.io
  repository: curlimages/curl
  tag: 7.85.0
  sha: ""
  pullPolicy: IfNotPresent

downloadDashboards:
  env: {}
  envFromSecret: ""
  resources: {}
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    seccompProfile:
      type: RuntimeDefault
  envValueFrom: {}
  #  ENV_NAME:
  #    configMapKeyRef:
  #      name: configmap-name
  #      key: value_key

## Pod Annotations
# podAnnotations: {}

## Pod Labels
# podLabels: {}

podPortName: grafana
gossipPortName: gossip
## Deployment annotations
# annotations: {}

## Expose the grafana service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  enabled: true
  type: ClusterIP
  loadBalancerIP: ""
  loadBalancerClass: ""
  loadBalancerSourceRanges: []
  port: 80
  targetPort: 3000
    # targetPort: 4181 To be used with a proxy extraContainer
  ## Service annotations. Can be templated.
  annotations: {}
  labels: {}
  portName: service
  # Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
  appProtocol: ""

serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  path: /metrics
  #  namespace: monitoring  (defaults to use the namespace this chart is deployed to)
  labels: {}
  interval: 30s
  scheme: http
  tlsConfig: {}
  scrapeTimeout: 30s
  relabelings: []
  metricRelabelings: []
  targetLabels: []

extraExposePorts: []
 # - name: keycloak
 #   port: 8080
 #   targetPort: 8080

# overrides pod.spec.hostAliases in the grafana deployment's pods
hostAliases: []
  # - ip: "1.2.3.4"
  #   hostnames:
  #     - "my.host.com"

ingress:
  enabled: true
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  ingressClassName: contour
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - localhost
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: use-annotation


  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
#  limits:
#    cpu: 100m
#    memory: 128Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
#
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment (evaluated as template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Topology Spread Constraints
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
##
topologySpreadConstraints: []

## Additional init containers (evaluated as template)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
##
extraInitContainers: []

## Enable an Specify container in extraContainers. This is meant to allow adding an authentication proxy to a grafana pod
extraContainers: ""
# extraContainers: |
# - name: proxy
#   image: quay.io/gambol99/keycloak-proxy:latest
#   args:
#   - -provider=github
#   - -client-id=
#   - -client-secret=
#   - -github-org=<ORG_NAME>
#   - -email-domain=*
#   - -cookie-secret=
#   - -http-address=http://0.0.0.0:4181
#   - -upstream-url=http://127.0.0.1:3000
#   ports:
#     - name: proxy-web
#       containerPort: 4181

## Volumes that can be used in init containers that will not be mounted to deployment pods
extraContainerVolumes: []
#  - name: volume-from-secret
#    secret:
#      secretName: secret-to-mount
#  - name: empty-dir-volume
#    emptyDir: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  type: pvc
  enabled: true
  # storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
  # selectorLabels: {}
  ## Sub-directory of the PV to mount. Can be templated.
  # subPath: ""
  ## Name of an existing PVC. Can be templated.
  # existingClaim:
  ## Extra labels to apply to a PVC.
  extraPvcLabels: {}

  ## If persistence is not enabled, this allows to mount the
  ## local storage in-memory to improve performance
  ##
  inMemory:
    enabled: false
    ## The maximum usage on memory medium EmptyDir would be
    ## the minimum value between the SizeLimit specified
    ## here and the sum of memory limits of all containers in a pod
    ##
    # sizeLimit: 300Mi

initChownData:
  ## If false, data ownership will not be reset at startup
  ## This allows the grafana-server to be run with an arbitrary user
  ##
  enabled: true

  ## initChownData container image
  ##
  image:
    # -- The Docker registry
    registry: docker.io
    repository: library/busybox
    tag: "1.31.1"
    sha: ""
    pullPolicy: IfNotPresent

  ## initChownData resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      add:
        - CHOWN

# Administrator credentials when not using an existing secret (see below)
adminUser: admin
adminPassword: mdp

# Use an existing secret for the admin user.
admin:
  ## Name of the secret. Can be templated.
  existingSecret: ""
  userKey: admin-user
  passwordKey: admin-password

## Define command to be executed at startup by grafana container
## Needed if using `vault-env` to manage secrets (ref: https://banzaicloud.com/blog/inject-secrets-into-pods-vault/)
## Default is "run.sh" as defined in grafana's Dockerfile
# command:
# - "sh"
# - "/run.sh"

## Optionally define args if command is used
## Needed if using `hashicorp/envconsul` to manage secrets
## By default no arguments are set
# args:
# - "-secret"
# - "secret/grafana"
# - "./grafana"

## Extra environment variables that will be pass onto deployment pods
##
## to provide grafana with access to CloudWatch on AWS EKS:
## 1. create an iam role of type "Web identity" with provider oidc.eks.* (note the provider for later)
## 2. edit the "Trust relationships" of the role, add a line inside the StringEquals clause using the
## same oidc eks provider as noted before (same as the existing line)
## also, replace NAMESPACE and prometheus-operator-grafana with the service account namespace and name
##
##  "oidc.eks.us-east-1.amazonaws.com/id/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:sub": "system:serviceaccount:NAMESPACE:prometheus-operator-grafana",
##
## 3. attach a policy to the role, you can use a built in policy called CloudWatchReadOnlyAccess
## 4. use the following env: (replace 123456789000 and iam-role-name-here with your aws account number and role name)
##
## env:
##   AWS_ROLE_ARN: arn:aws:iam::123456789000:role/iam-role-name-here
##   AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
##   AWS_REGION: us-east-1
##
## 5. uncomment the EKS section in extraSecretMounts: below
## 6. uncomment the annotation section in the serviceAccount: above
## make sure to replace arn:aws:iam::123456789000:role/iam-role-name-here with your role arn

env: {}

## "valueFrom" environment variable references that will be added to deployment pods. Name is templated.
## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core
## Renders in container spec as:
##   env:
##     ...
##     - name: <key>
##       valueFrom:
##         <value rendered as YAML>
envValueFrom: {}
  #  ENV_NAME:
  #    configMapKeyRef:
  #      name: configmap-name
  #      key: value_key

## The name of a secret in the same kubernetes namespace which contain values to be added to the environment
## This can be useful for auth tokens, etc. Value is templated.
envFromSecret: ""

## Sensible environment variables that will be rendered as new secret object
## This can be useful for auth tokens, etc.
## If the secret values contains "{{", they'll need to be properly escaped so that they are not interpreted by Helm
## ref: https://helm.sh/docs/howto/charts_tips_and_tricks/#using-the-tpl-function
envRenderSecret: {}

## The names of secrets in the same kubernetes namespace which contain values to be added to the environment
## Each entry should contain a name key, and can optionally specify whether the secret must be defined with an optional key.
## Name is templated.
envFromSecrets: []
## - name: secret-name
##   prefix: prefix
##   optional: true

## The names of conifgmaps in the same kubernetes namespace which contain values to be added to the environment
## Each entry should contain a name key, and can optionally specify whether the configmap must be defined with an optional key.
## Name is templated.
## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#configmapenvsource-v1-core
envFromConfigMaps: []
## - name: configmap-name
##   prefix: prefix
##   optional: true

# Inject Kubernetes services as environment variables.
# See https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#environment-variables
enableServiceLinks: true

## Additional grafana server secret mounts
# Defines additional mounts with secrets. Secrets must be manually created in the namespace.
extraSecretMounts: []
  # - name: secret-files
  #   mountPath: /etc/secrets
  #   secretName: grafana-secret-files
  #   readOnly: true
  #   subPath: ""
  #
  # for AWS EKS (cloudwatch) use the following (see also instruction in env: above)
  # - name: aws-iam-token
  #   mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
  #   readOnly: true
  #   projected:
  #     defaultMode: 420
  #     sources:
  #       - serviceAccountToken:
  #           audience: sts.amazonaws.com
  #           expirationSeconds: 86400
  #           path: token
  #
  # for CSI e.g. Azure Key Vault use the following
  # - name: secrets-store-inline
  #  mountPath: /run/secrets
  #  readOnly: true
  #  csi:
  #    driver: secrets-store.csi.k8s.io
  #    readOnly: true
  #    volumeAttributes:
  #      secretProviderClass: "akv-grafana-spc"
  #    nodePublishSecretRef:                       # Only required when using service principal mode
  #       name: grafana-akv-creds                  # Only required when using service principal mode

## Additional grafana server volume mounts
# Defines additional volume mounts.
extraVolumeMounts: []
  # - name: extra-volume-0
  #   mountPath: /mnt/volume0
  #   readOnly: true
  # - name: extra-volume-1
  #   mountPath: /mnt/volume1
  #   readOnly: true
  # - name: grafana-secrets
  #   mountPath: /mnt/volume2

## Additional Grafana server volumes
extraVolumes: []
  # - name: extra-volume-0
  #   existingClaim: volume-claim
  # - name: extra-volume-1
  #   hostPath:
  #     path: /usr/shared/
  #     type: ""
  # - name: grafana-secrets
  #   csi:
  #     driver: secrets-store.csi.k8s.io
  #     readOnly: true
  #     volumeAttributes:
  #       secretProviderClass: "grafana-env-spc"

## Container Lifecycle Hooks. Execute a specific bash command or make an HTTP request
lifecycleHooks: {}
  # postStart:
  #   exec:
  #     command: []

## Pass the plugins you want installed as a list.
##
plugins: []
  # - digrich-bubblechart-panel
  # - grafana-clock-panel
  ## You can also use other plugin download URL, as long as they are valid zip files,
  ## and specify the name of the plugin after the semicolon. Like this:
  # - https://grafana.com/api/plugins/marcusolsson-json-datasource/versions/1.3.2/download;marcusolsson-json-datasource

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server:80
      isDefault: true

## Configure grafana alerting (can be templated)
## ref: http://docs.grafana.org/administration/provisioning/#alerting
##
alerting: {}
  # rules.yaml:
  #   apiVersion: 1
  #   groups:
  #     - orgId: 1
  #       name: '{{ .Chart.Name }}_my_rule_group'
  #       folder: my_first_folder
  #       interval: 60s
  #       rules:
  #         - uid: my_id_1
  #           title: my_first_rule
  #           condition: A
  #           data:
  #             - refId: A
  #               datasourceUid: '-100'
  #               model:
  #                 conditions:
  #                   - evaluator:
  #                       params:
  #                         - 3
  #                       type: gt
  #                     operator:
  #                       type: and
  #                     query:
  #                       params:
  #                         - A
  #                     reducer:
  #                       type: last
  #                     type: query
  #                 datasource:
  #                   type: __expr__
  #                   uid: '-100'
  #                 expression: 1==0
  #                 intervalMs: 1000
  #                 maxDataPoints: 43200
  #                 refId: A
  #                 type: math
  #           dashboardUid: my_dashboard
  #           panelId: 123
  #           noDataState: Alerting
  #           for: 60s
  #           annotations:
  #             some_key: some_value
  #           labels:
  #             team: sre_team_1
  # contactpoints.yaml:
  #   secret:
  #     apiVersion: 1
  #     contactPoints:
  #       - orgId: 1
  #         name: cp_1
  #         receivers:
  #           - uid: first_uid
  #             type: pagerduty
  #             settings:
  #               integrationKey: XXX
  #               severity: critical
  #               class: ping failure
  #               component: Grafana
  #               group: app-stack
  #               summary: |
  #                 {{ `{{ include "default.message" . }}` }}

## Configure notifiers
## ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels
##
notifiers: {}
#  notifiers.yaml:
#    notifiers:
#    - name: email-notifier
#      type: email
#      uid: email1
#      # either:
#      org_id: 1
#      # or
#      org_name: Main Org.
#      is_default: true
#      settings:
#        addresses: an_email_address@example.com
#    delete_notifiers:

## Configure grafana dashboard providers
## ref: http://docs.grafana.org/administration/provisioning/#dashboards
##
## `path` must be /var/lib/grafana/dashboards/<provider_name>
##
dashboardProviders:
   dashboardproviders.yaml:
     apiVersion: 1
     providers:
     - name: 'default'
       orgId: 1
       folder: ''
       type: file
       disableDeletion: false
       editable: true
       options:
         path: /var/lib/grafana/dashboards/default
## Configure grafana dashboard to import
## NOTE: To use dashboards you must also enable/configure dashboardProviders
## ref: https://grafana.com/dashboards
##
## dashboards per provider, use provider name as key.
##
dashboards:
    default:
      kubernetes-dashboard:
        json: |
          {
              "annotations": {
                "list": [
                  {
                    "builtIn": 1,
                    "datasource": {
                      "type": "grafana",
                      "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "target": {
                      "limit": 100,
                      "matchAny": false,
                      "tags": [],
                      "type": "dashboard"
                    },
                    "type": "dashboard"
                  }
                ]
              },
              "description": "to monitor pod cpu, memory, I/O, RX/TX and cluster cpu, memory request/limit/real usage, RX/TX, Disk I/O ",
              "editable": true,
              "fiscalYearStartMonth": 0,
              "gnetId": 18283,
              "graphTooltip": 0,
              "links": [],
              "liveNow": false,
              "panels": [
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "thresholds"
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "transparent",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 10,
                    "w": 24,
                    "x": 0,
                    "y": 0
                  },
                  "id": 50,
                  "options": {
                    "infinitePan": false,
                    "inlineEditing": true,
                    "panZoom": false,
                    "root": {
                      "background": {
                        "color": {
                          "fixed": "transparent"
                        }
                      },
                      "border": {
                        "color": {
                          "fixed": "dark-green"
                        }
                      },
                      "elements": [
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 41,
                            "width": 3
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "control-manager"
                            },
                            "valign": "top"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 1",
                          "placement": {
                            "height": 95,
                            "left": 214,
                            "top": 42,
                            "width": 155
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 41,
                            "width": 3
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "api"
                            },
                            "valign": "top"
                          },
                          "connections": [
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -2.461095010080645e-7,
                                "y": -1.0000003212376645
                              },
                              "sourceOriginal": {
                                "x": 549.5,
                                "y": 137.00001525878906
                              },
                              "target": {
                                "x": 0.023655651461693548,
                                "y": 1.0140355160361842
                              },
                              "targetName": "Element 3",
                              "targetOriginal": {
                                "x": 551.3333320617676,
                                "y": 220.3333282470703
                              }
                            },
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -0.9999998523342994,
                                "y": 0
                              },
                              "sourceOriginal": {
                                "x": 472.0000305175781,
                                "y": 89.5
                              },
                              "target": {
                                "x": 1.03010746125252,
                                "y": 0.0035088790090460524
                              },
                              "targetName": "Element 1",
                              "targetOriginal": {
                                "x": 371.3333320617676,
                                "y": 89.33332824707031
                              }
                            },
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -0.9999998523342994,
                                "y": -1
                              },
                              "sourceOriginal": {
                                "x": 472.0000305175781,
                                "y": 137
                              },
                              "target": {
                                "x": 0.986666259765625,
                                "y": 0.32
                              },
                              "targetName": "Element 13",
                              "targetOriginal": {
                                "x": 341.3333320617676,
                                "y": 212
                              }
                            }
                          ],
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 2",
                          "placement": {
                            "height": 95,
                            "left": 472,
                            "top": 42,
                            "width": 155
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 41,
                            "width": 3
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "scheduler"
                            },
                            "valign": "top"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 3",
                          "placement": {
                            "height": 95,
                            "left": 472,
                            "top": 221,
                            "width": 155
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 41,
                            "width": 3
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "kubelet"
                            },
                            "valign": "top"
                          },
                          "connections": [
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -1.000000246109501,
                                "y": 0
                              },
                              "sourceOriginal": {
                                "x": 859,
                                "y": 89.5
                              },
                              "target": {
                                "x": 0.9784943611391129,
                                "y": 0.02456151058799342
                              },
                              "targetName": "Element 2",
                              "targetOriginal": {
                                "x": 625.3333320617676,
                                "y": 88.33332824707031
                              }
                            }
                          ],
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 5",
                          "placement": {
                            "height": 95,
                            "left": 859,
                            "top": 42,
                            "width": 155
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 41,
                            "width": 3
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "k-proxy"
                            },
                            "valign": "top"
                          },
                          "connections": [
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -1.000000246109501,
                                "y": 0
                              },
                              "sourceOriginal": {
                                "x": 859,
                                "y": 220.50001525878906
                              },
                              "target": {
                                "x": 0.9526879095262096,
                                "y": -0.39649112099095396
                              },
                              "targetName": "Element 2",
                              "targetOriginal": {
                                "x": 623.3333320617676,
                                "y": 108.33332824707031
                              }
                            }
                          ],
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 6",
                          "placement": {
                            "height": 95,
                            "left": 859,
                            "top": 173,
                            "width": 155
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "etcd_bookmark_counts",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "etcd_bookmark_counts",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 7",
                          "placement": {
                            "height": 38,
                            "left": 259,
                            "top": 278,
                            "width": 65
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "sum(irate(apiserver_request_total{code=~\"20.*\",verb=~\"GET|LIST\"}[5m]))/sum(irate(apiserver_request_total{verb=~\"GET|LIST\"}[5m]))",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "sum(irate(apiserver_request_total{code=~\"20.*\",verb=~\"GET|LIST\"}[5m]))/sum(irate(apiserver_request_total{verb=~\"GET|LIST\"}[5m]))",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 8",
                          "placement": {
                            "height": 50,
                            "left": 484,
                            "top": 65,
                            "width": 70
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "sum(irate(apiserver_request_total{code=~\"20.*\",verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))/sum(irate(apiserver_request_total{verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "sum(irate(apiserver_request_total{code=~\"20.*\",verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))/sum(irate(apiserver_request_total{verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 9",
                          "placement": {
                            "height": 50,
                            "left": 550,
                            "top": 65,
                            "width": 70
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "rgb(204, 204, 220)"
                            },
                            "size": 16,
                            "text": {
                              "fixed": "read"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 10",
                          "placement": {
                            "height": 50,
                            "left": 492,
                            "top": 90,
                            "width": 62
                          },
                          "type": "text"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "rgb(204, 204, 220)"
                            },
                            "size": 16,
                            "text": {
                              "fixed": "write"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 11",
                          "placement": {
                            "height": 50,
                            "left": 550,
                            "top": 90,
                            "width": 62
                          },
                          "type": "text"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "kubelet_active_pods",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "kubelet_active_pods",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 12",
                          "placement": {
                            "height": 50,
                            "left": 902,
                            "top": 65,
                            "width": 70
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "fill": {
                              "fixed": "#D9D9D9"
                            },
                            "path": {
                              "fixed": "img/icons/unicons/database.svg",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 13",
                          "placement": {
                            "height": 100,
                            "left": 242,
                            "top": 178,
                            "width": 100
                          },
                          "type": "icon"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "rgb(204, 204, 220)"
                            },
                            "size": 16,
                            "text": {
                              "fixed": "etcd"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 14",
                          "placement": {
                            "height": 50,
                            "left": 242,
                            "top": 148,
                            "width": 100
                          },
                          "type": "text"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "text"
                            },
                            "radius": 24,
                            "width": 2
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "control-plane"
                            },
                            "valign": "top"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 15",
                          "placement": {
                            "height": 321,
                            "left": 189,
                            "top": 2,
                            "width": 544
                          },
                          "type": "rectangle"
                        }
                      ],
                      "name": "Element 1716491250804",
                      "type": "frame"
                    },
                    "showAdvancedTypes": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "code",
                      "expr": "etcd_bookmark_counts{resource=~\".*\"}",
                      "fullMetaSearch": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "etcd-bookmarks",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "sum(irate(apiserver_request_total{code=~\"20.*\",verb=~\"GET|LIST\"}[5m]))/sum(irate(apiserver_request_total{verb=~\"GET|LIST\"}[5m]))",
                      "hide": false,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "api-read-request-status-rate"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(irate(apiserver_request_total{code=~\"20.*\",verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))/sum(irate(apiserver_request_total{verb!~\"GET|LIST|WATCH|CONNECT\"}[5m]))",
                      "hide": false,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "api-write-request-status-rate"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "kubelet_active_pods",
                      "fullMetaSearch": false,
                      "hide": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "kubelet-active-pods",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "histogram_quantile(0.99, sum(rate(rest_client_request_duration_seconds_bucket{job=\"kube-proxy\",verb=\"POST\"}[5m])) by (verb, url, le))",
                      "hide": false,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "kube-proxy-slow-post-requests"
                    }
                  ],
                  "title": "Cluster Infrastructure",
                  "transparent": true,
                  "type": "canvas"
                },
                {
                  "collapsed": false,
                  "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 10
                  },
                  "id": 49,
                  "panels": [],
                  "title": "Global",
                  "type": "row"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "continuous-GrYlRd"
                      },
                      "mappings": [],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 6,
                    "x": 0,
                    "y": 11
                  },
                  "id": 35,
                  "options": {
                    "displayMode": "lcd",
                    "maxVizHeight": 300,
                    "minVizHeight": 10,
                    "minVizWidth": 0,
                    "namePlacement": "auto",
                    "orientation": "horizontal",
                    "reduceOptions": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showUnfilled": true,
                    "sizing": "auto",
                    "valueMode": "color"
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "exemplar": true,
                      "expr": "avg(1-rate(node_cpu_seconds_total{mode=\"idle\", job=\"kubernetes-nodes\"}[$__rate_interval]))",
                      "interval": "",
                      "legendFormat": "Real",
                      "range": true,
                      "refId": "A"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_requests{unit=\"core\"}) / sum(machine_cpu_cores)",
                      "hide": false,
                      "legendFormat": "Requests",
                      "range": true,
                      "refId": "B"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_limits{unit=\"core\"}) / sum(machine_cpu_cores)",
                      "hide": false,
                      "legendFormat": "Limits",
                      "range": true,
                      "refId": "C"
                    }
                  ],
                  "title": "Global CPU  Usage",
                  "type": "bargauge"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "continuous-GrYlRd"
                      },
                      "decimals": 2,
                      "mappings": [],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                        "mode": "percentage",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 6,
                    "x": 6,
                    "y": 11
                  },
                  "id": 37,
                  "options": {
                    "displayMode": "lcd",
                    "maxVizHeight": 300,
                    "minVizHeight": 10,
                    "minVizWidth": 0,
                    "namePlacement": "auto",
                    "orientation": "horizontal",
                    "reduceOptions": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showUnfilled": true,
                    "sizing": "auto",
                    "text": {},
                    "valueMode": "color"
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "exemplar": true,
                      "expr": "sum(node_memory_MemTotal_bytes{job=\"kubernetes-nodes\"} - node_memory_MemAvailable_bytes{job=\"kubernetes-nodes\"}) / sum(node_memory_MemTotal_bytes{job=\"kubernetes-nodes\"})",
                      "interval": "",
                      "legendFormat": "Real",
                      "range": true,
                      "refId": "A"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_requests{unit=\"byte\"}) / sum(machine_memory_bytes)",
                      "hide": false,
                      "legendFormat": "Requests",
                      "range": true,
                      "refId": "B"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_limits{unit=\"byte\"}) / sum(machine_memory_bytes)",
                      "hide": false,
                      "legendFormat": "Limits",
                      "range": true,
                      "refId": "C"
                    }
                  ],
                  "title": "Global RAM Usage",
                  "type": "bargauge"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "mappings": [],
                      "noValue": "0",
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "blue",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 2,
                    "x": 12,
                    "y": 11
                  },
                  "id": 39,
                  "options": {
                    "colorMode": "value",
                    "graphMode": "none",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                      "calcs": [
                        "last"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value",
                    "wideLayout": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "exemplar": true,
                      "expr": "count(up{job=\"kubernetes-nodes\"})",
                      "interval": "",
                      "legendFormat": "",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Nodes",
                  "type": "stat"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        }
                      },
                      "mappings": [],
                      "unit": "none"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 10,
                    "x": 14,
                    "y": 11
                  },
                  "id": 24,
                  "options": {
                    "displayLabels": [
                      "value"
                    ],
                    "legend": {
                      "displayMode": "table",
                      "placement": "right",
                      "showLegend": true,
                      "values": [
                        "value"
                      ]
                    },
                    "pieType": "donut",
                    "reduceOptions": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "pluginVersion": "9.1.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "count by(namespace) (rate(kube_pod_container_status_running{namespace=~\"$namespace\"}[$__rate_interval]))",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Running Pods",
                  "type": "piechart"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "mappings": [],
                      "noValue": "0",
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "blue",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 2,
                    "x": 12,
                    "y": 15
                  },
                  "id": 41,
                  "options": {
                    "colorMode": "value",
                    "graphMode": "none",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                      "calcs": [
                        "last"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value",
                    "wideLayout": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "expr": "count(kube_namespace_created)",
                      "interval": "",
                      "legendFormat": "",
                      "refId": "A"
                    }
                  ],
                  "title": "Namespaces",
                  "type": "stat"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "mappings": [],
                      "noValue": "0",
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "rgb(255, 255, 255)",
                            "value": null
                          }
                        ]
                      },
                      "unit": "none"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 6,
                    "x": 0,
                    "y": 19
                  },
                  "id": 10,
                  "options": {
                    "colorMode": "none",
                    "graphMode": "none",
                    "justifyMode": "center",
                    "orientation": "auto",
                    "reduceOptions": {
                      "calcs": [
                        "mean"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "auto",
                    "wideLayout": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "exemplar": true,
                      "expr": "sum(1-rate(node_cpu_seconds_total{mode=\"idle\", job=\"kubernetes-nodes\"}[$__rate_interval]))",
                      "interval": "",
                      "legendFormat": "Real",
                      "range": true,
                      "refId": "A"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_requests{unit=\"core\"})",
                      "hide": false,
                      "legendFormat": "Requests",
                      "range": true,
                      "refId": "B"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_limits{unit=\"core\"})",
                      "hide": false,
                      "legendFormat": "Limits",
                      "range": true,
                      "refId": "C"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(machine_cpu_cores)",
                      "hide": false,
                      "legendFormat": "Total",
                      "range": true,
                      "refId": "D"
                    }
                  ],
                  "title": "CPU Usage",
                  "type": "stat"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "mappings": [],
                      "noValue": "0",
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "rgb(255, 255, 255)",
                            "value": null
                          }
                        ]
                      },
                      "unit": "bytes"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 6,
                    "x": 6,
                    "y": 19
                  },
                  "id": 12,
                  "options": {
                    "colorMode": "none",
                    "graphMode": "none",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                      "calcs": [
                        "mean"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "auto",
                    "wideLayout": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "exemplar": true,
                      "expr": "sum(node_memory_MemTotal_bytes{job=\"kubernetes-nodes\"} - node_memory_MemAvailable_bytes{job=\"kubernetes-nodes\"})",
                      "interval": "",
                      "legendFormat": "Real",
                      "range": true,
                      "refId": "A"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_requests{unit=\"byte\"})",
                      "hide": false,
                      "legendFormat": "Requests",
                      "range": true,
                      "refId": "B"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(kube_pod_container_resource_limits{unit=\"byte\"})",
                      "hide": false,
                      "legendFormat": "Limits",
                      "range": true,
                      "refId": "C"
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(machine_memory_bytes)",
                      "hide": false,
                      "legendFormat": "Total",
                      "range": true,
                      "refId": "D"
                    }
                  ],
                  "title": "RAM Usage",
                  "type": "stat"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "mappings": [],
                      "noValue": "0",
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "blue",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 2,
                    "x": 12,
                    "y": 19
                  },
                  "id": 43,
                  "options": {
                    "colorMode": "value",
                    "graphMode": "none",
                    "justifyMode": "auto",
                    "orientation": "auto",
                    "reduceOptions": {
                      "calcs": [
                        "last"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showPercentChange": false,
                    "text": {},
                    "textMode": "value",
                    "wideLayout": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "expr": "sum(kube_pod_status_phase{phase='Running'})",
                      "interval": "",
                      "legendFormat": "",
                      "refId": "A"
                    }
                  ],
                  "title": "Running Pods",
                  "type": "stat"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "continuous-GrYlRd"
                      },
                      "mappings": [],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 5,
                    "x": 14,
                    "y": 19
                  },
                  "id": 2,
                  "options": {
                    "displayMode": "lcd",
                    "maxVizHeight": 300,
                    "minVizHeight": 10,
                    "minVizWidth": 0,
                    "namePlacement": "auto",
                    "orientation": "horizontal",
                    "reduceOptions": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showUnfilled": true,
                    "sizing": "auto",
                    "valueMode": "color"
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "avg(1-rate(node_cpu_seconds_total{mode=\"idle\", job=\"kubernetes-nodes\"}[$__rate_interval]))",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Cluster CPU Utilization",
                  "type": "bargauge"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "continuous-GrYlRd"
                      },
                      "mappings": [],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "#EAB839",
                            "value": 0.5
                          },
                          {
                            "color": "red",
                            "value": 0.7
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 4,
                    "w": 5,
                    "x": 19,
                    "y": 19
                  },
                  "id": 4,
                  "options": {
                    "displayMode": "lcd",
                    "maxVizHeight": 300,
                    "minVizHeight": 10,
                    "minVizWidth": 0,
                    "namePlacement": "auto",
                    "orientation": "horizontal",
                    "reduceOptions": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "fields": "",
                      "values": false
                    },
                    "showUnfilled": true,
                    "sizing": "auto",
                    "valueMode": "color"
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(node_memory_MemTotal_bytes{job=\"kubernetes-nodes\"} - node_memory_MemAvailable_bytes{job=\"kubernetes-nodes\"}) / sum(node_memory_MemTotal_bytes{job=\"kubernetes-nodes\"})",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Cluster Memory Utilization",
                  "type": "bargauge"
                },
                {
                  "collapsed": false,
                  "gridPos": {
                    "h": 1,
                    "w": 24,
                    "x": 0,
                    "y": 23
                  },
                  "id": 6,
                  "panels": [],
                  "title": "Row title",
                  "type": "row"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "CPU Cores",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "linear",
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "none"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 24
                  },
                  "id": 16,
                  "options": {
                    "legend": {
                      "calcs": [
                        "min",
                        "max",
                        "mean",
                        "sum"
                      ],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "single",
                      "sort": "none"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "sum by(namespace) (rate(container_cpu_usage_seconds_total{namespace=~\"$namespace\"}[$__rate_interval]))",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "CPU Utilization by namespace",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "description": "",
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "Bytes",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "bytes"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 24
                  },
                  "id": 22,
                  "options": {
                    "legend": {
                      "calcs": [
                        "min",
                        "max",
                        "mean",
                        "sum"
                      ],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "single",
                      "sort": "none"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "sum by(namespace) (rate(container_memory_working_set_bytes{namespace=~\"$namespace\"}[$__rate_interval]))",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Memory Utilization by namespace",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "short"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 32
                  },
                  "id": 45,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": false
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "none"
                    }
                  },
                  "pluginVersion": "8.3.3",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "code",
                      "expr": "sum(rate(coredns_forward_requests_total[$__rate_interval]))",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "CoreDNS - Total Forward Requests",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "bytes"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 32
                  },
                  "id": 48,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "pluginVersion": "8.3.3",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "exemplar": true,
                      "expr": "sum(coredns_cache_entries) by (type)",
                      "interval": "",
                      "legendFormat": "{{ type }}",
                      "refId": "A"
                    }
                  ],
                  "title": "CoreDNS - Cache Size",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "Cores",
                        "axisPlacement": "left",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "none"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 40
                  },
                  "id": 29,
                  "options": {
                    "legend": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "displayMode": "list",
                      "placement": "right",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "max by(pod) (kube_pod_container_resource_limits{pod=~\".+\", resource=\"cpu\", unit=\"core\"})",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Pod CPU Limits",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "Bytes",
                        "axisPlacement": "left",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineStyle": {
                          "fill": "solid"
                        },
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "decimals": 2,
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "bytes"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 9,
                    "w": 24,
                    "x": 0,
                    "y": 48
                  },
                  "id": 30,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "right",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "max by(pod) (kube_pod_container_resource_limits{pod=~\".+\", resource=\"memory\", unit=\"byte\"})",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Pod Memory Limits",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "CPU %",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineStyle": {
                          "fill": "solid"
                        },
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "max": 1,
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 24,
                    "x": 0,
                    "y": 57
                  },
                  "id": 32,
                  "options": {
                    "legend": {
                      "calcs": [
                        "lastNotNull"
                      ],
                      "displayMode": "list",
                      "placement": "right",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "max by(pod) (kube_pod_container_resource_requests{pod=~\".+\", resource=\"cpu\", unit=\"core\"})",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Pod CPU Request",
                  "type": "timeseries"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "fixedColor": "semi-dark-yellow",
                        "mode": "palette-classic",
                        "seriesBy": "last"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "Bytes",
                        "axisPlacement": "left",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 25,
                        "gradientMode": "opacity",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "smooth",
                        "lineStyle": {
                          "fill": "solid"
                        },
                        "lineWidth": 2,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "never",
                        "spanNulls": true,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "green",
                            "value": null
                          },
                          {
                            "color": "red",
                            "value": 80
                          }
                        ]
                      },
                      "unit": "percentunit"
                    },
                    "overrides": [
                      {
                        "__systemRef": "hideSeriesFrom",
                        "matcher": {
                          "id": "byNames",
                          "options": {
                            "mode": "exclude",
                            "names": [
                              "mytbedge-757d7fb6c7-n95sm"
                            ],
                            "prefix": "All except:",
                            "readOnly": true
                          }
                        },
                        "properties": [
                          {
                            "id": "custom.hideFrom",
                            "value": {
                              "legend": false,
                              "tooltip": false,
                              "viz": true
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "gridPos": {
                    "h": 9,
                    "w": 24,
                    "x": 0,
                    "y": 65
                  },
                  "id": 33,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "right",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "multi",
                      "sort": "desc"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "editorMode": "builder",
                      "expr": "max by(pod) (kube_pod_container_resource_requests{pod=~\".+\", resource=\"memory\", unit=\"byte\"})",
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "A"
                    }
                  ],
                  "title": "Pod Memory Requests",
                  "type": "timeseries"
                }
              ],
              "refresh": "auto",
              "schemaVersion": 39,
              "tags": [
                "kubernetes",
                "prometheus",
                "cadvisor"
              ],
              "templating": {
                "list": [
                  {
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": {
                      "type": "prometheus",
                      "uid": "PBFA97CFB590B2093"
                    },
                    "definition": "label_values(kube_pod_info, namespace)",
                    "hide": 0,
                    "includeAll": true,
                    "multi": true,
                    "name": "namespace",
                    "options": [],
                    "query": {
                      "query": "label_values(kube_pod_info, namespace)",
                      "refId": "StandardVariableQuery"
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 1,
                    "type": "query"
                  },
                  {
                    "current": {
                      "selected": false,
                      "text": "All",
                      "value": "$__all"
                    },
                    "datasource": {
                      "type": "prometheus",
                      "uid": "PBFA97CFB590B2093"
                    },
                    "definition": "label_values(kube_pod_info, pod)",
                    "hide": 0,
                    "includeAll": true,
                    "multi": true,
                    "name": "pod",
                    "options": [],
                    "query": {
                      "query": "label_values(kube_pod_info, pod)",
                      "refId": "StandardVariableQuery"
                    },
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 1,
                    "type": "query"
                  },
                  {
                    "current": {
                      "selected": false,
                      "text": "Prometheus",
                      "value": "PBFA97CFB590B2093"
                    },
                    "hide": 0,
                    "includeAll": false,
                    "multi": false,
                    "name": "datasource",
                    "options": [],
                    "query": "prometheus",
                    "queryValue": "",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "type": "datasource"
                  },
                  {
                    "current": {
                      "selected": true,
                      "text": [
                        "All"
                      ],
                      "value": [
                        "$__all"
                      ]
                    },
                    "datasource": {
                      "type": "prometheus",
                      "uid": "PBFA97CFB590B2093"
                    },
                    "definition": "container_network_transmit_bytes_total{kubernetes_io_os=\"linux\"}",
                    "hide": 0,
                    "includeAll": true,
                    "multi": true,
                    "name": "netface",
                    "options": [],
                    "query": {
                      "query": "container_network_transmit_bytes_total{kubernetes_io_os=\"linux\"}",
                      "refId": "StandardVariableQuery"
                    },
                    "refresh": 1,
                    "regex": "/.*interface=\"([^\"]*).*/",
                    "skipUrlSync": false,
                    "sort": 1,
                    "type": "query"
                  }
                ]
              },
              "time": {
                "from": "now-6h",
                "to": "now"
              },
              "timeRangeUpdatedDuringEditOrView": false,
              "timepicker": {},
              "timezone": "",
              "title": "Kubernetes Dashboard",
              "uid": "e1RXnCbVz",
              "version": 1,
              "weekStart": "monday"
          }
      drawing-dashboard:
        json: |
          {
              "annotations": {
                "list": [
                  {
                    "builtIn": 1,
                    "datasource": {
                      "type": "grafana",
                      "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                  }
                ]
              },
              "editable": true,
              "fiscalYearStartMonth": 0,
              "graphTooltip": 0,
              "links": [],
              "panels": [
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "thresholds"
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "transparent",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 10,
                    "w": 24,
                    "x": 0,
                    "y": 0
                  },
                  "id": 1,
                  "options": {
                    "infinitePan": false,
                    "inlineEditing": true,
                    "panZoom": false,
                    "root": {
                      "background": {
                        "color": {
                          "fixed": "transparent"
                        },
                        "image": {
                          "fixed": "img/bg",
                          "mode": "fixed"
                        }
                      },
                      "border": {
                        "color": {
                          "fixed": "dark-green"
                        }
                      },
                      "constraint": {
                        "horizontal": "left",
                        "vertical": "top"
                      },
                      "elements": [
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "text"
                            },
                            "radius": 10,
                            "width": 2
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "fisherman"
                            },
                            "valign": "top"
                          },
                          "connections": [
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": 1.0000003017274672,
                                "y": -3.721655868902439e-7
                              },
                              "sourceOriginal": {
                                "x": 299.0000305175781,
                                "y": 91.00001525878906
                              },
                              "target": {
                                "x": -0.5361306784036276,
                                "y": -0.05847944293105811
                              },
                              "targetName": "Element 6",
                              "targetOriginal": {
                                "x": 415.3333320617676,
                                "y": 95.33332824707031
                              }
                            }
                          ],
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 7",
                          "placement": {
                            "height": 82,
                            "left": 122,
                            "top": 50,
                            "width": 177
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "text"
                            },
                            "radius": 10,
                            "width": 2
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "cabin"
                            },
                            "valign": "top"
                          },
                          "connections": [
                            {
                              "color": {
                                "fixed": "rgb(204, 204, 220)"
                              },
                              "path": "straight",
                              "size": {
                                "fixed": 2,
                                "max": 10,
                                "min": 1
                              },
                              "source": {
                                "x": -1.0000002155196195,
                                "y": 0
                              },
                              "sourceOriginal": {
                                "x": 643,
                                "y": 51
                              },
                              "target": {
                                "x": 0.6806525383795892,
                                "y": 0.3450293289987664
                              },
                              "targetName": "Element 6",
                              "targetOriginal": {
                                "x": 589.3333320617676,
                                "y": 72.33332824707031
                              }
                            }
                          ],
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 8",
                          "placement": {
                            "height": 82,
                            "left": 643,
                            "top": 10,
                            "width": 177
                          },
                          "type": "rectangle"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "blue"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "text": {
                              "fixed": "lake"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 6",
                          "placement": {
                            "height": 114,
                            "left": 349,
                            "top": 35,
                            "width": 286
                          },
                          "type": "cloud"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "api": {
                              "contentType": "application/json",
                              "data": "{}",
                              "endpoint": "http://fisherman.localhost:80/reset",
                              "headerParams": [],
                              "method": "POST",
                              "queryParams": []
                            },
                            "color": {
                              "fixed": "#F0F4FD"
                            },
                            "size": 14,
                            "style": {
                              "variant": "primary"
                            },
                            "text": {
                              "fixed": "Relâcher les poissons",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "relacher_poissons",
                          "placement": {
                            "height": 44,
                            "left": 1000,
                            "top": 10,
                            "width": 195
                          },
                          "type": "button"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "fish_caught_total",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "fish_caught_total",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 3",
                          "placement": {
                            "height": 50,
                            "left": 179,
                            "top": 73,
                            "width": 63
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "lake_temperature_celsius",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "lake_temperature_celsius",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 4",
                          "placement": {
                            "height": 50,
                            "left": 518,
                            "top": 92,
                            "width": 63
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "fireplace_status",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "text"
                            },
                            "size": 20,
                            "text": {
                              "field": "fireplace_status",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 5",
                          "placement": {
                            "height": 50,
                            "left": 700,
                            "top": 35,
                            "width": 63
                          },
                          "type": "metric-value"
                        }
                      ],
                      "name": "Element 1716210376578",
                      "placement": {
                        "height": 100,
                        "left": 0,
                        "rotation": 0,
                        "top": 0,
                        "width": 100
                      },
                      "type": "frame"
                    },
                    "showAdvancedTypes": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "fish_caught_total",
                      "fullMetaSearch": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "fish-caught",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "lake_temperature_celsius",
                      "fullMetaSearch": false,
                      "hide": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "lake-temperature",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "fireplace_status",
                      "fullMetaSearch": false,
                      "hide": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "cabin-fireplace-status",
                      "useBackend": false
                    }
                  ],
                  "title": "Drawing Applications",
                  "transparent": true,
                  "type": "canvas"
                },
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "palette-classic"
                      },
                      "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "drawStyle": "line",
                        "fillOpacity": 0,
                        "gradientMode": "none",
                        "hideFrom": {
                          "legend": false,
                          "tooltip": false,
                          "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "linear",
                        "lineWidth": 1,
                        "pointSize": 5,
                        "scaleDistribution": {
                          "type": "linear"
                        },
                        "showPoints": "auto",
                        "spanNulls": false,
                        "stacking": {
                          "group": "A",
                          "mode": "none"
                        },
                        "thresholdsStyle": {
                          "mode": "off"
                        }
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "transparent",
                            "value": null
                          }
                        ]
                      },
                      "unit": "celsius"
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 9,
                    "w": 24,
                    "x": 0,
                    "y": 10
                  },
                  "id": 2,
                  "options": {
                    "legend": {
                      "calcs": [],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                    },
                    "tooltip": {
                      "maxHeight": 600,
                      "mode": "single",
                      "sort": "none"
                    }
                  },
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "lake_temperature_celsius",
                      "fullMetaSearch": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "lake-temperature",
                      "useBackend": false
                    }
                  ],
                  "title": "Lake Temperature",
                  "type": "timeseries"
                }
              ],
              "refresh": "auto",
              "schemaVersion": 39,
              "tags": [],
              "templating": {
                "list": []
              },
              "time": {
                "from": "now-6h",
                "to": "now"
              },
              "timeRangeUpdatedDuringEditOrView": false,
              "timepicker": {},
              "timezone": "browser",
              "title": "Drawing",
              "uid": "adma37vjt0h6od",
              "version": 2,
              "weekStart": ""
          }
      beautiful-drawing:
        json: |
          {
              "annotations": {
                "list": [
                  {
                    "builtIn": 1,
                    "datasource": {
                      "type": "grafana",
                      "uid": "-- Grafana --"
                    },
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                  }
                ]
              },
              "editable": true,
              "fiscalYearStartMonth": 0,
              "graphTooltip": 0,
              "id": 3,
              "links": [],
              "panels": [
                {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "PBFA97CFB590B2093"
                  },
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "thresholds"
                      },
                      "mappings": [],
                      "thresholds": {
                        "mode": "absolute",
                        "steps": [
                          {
                            "color": "transparent",
                            "value": null
                          }
                        ]
                      }
                    },
                    "overrides": []
                  },
                  "gridPos": {
                    "h": 22,
                    "w": 11,
                    "x": 0,
                    "y": 0
                  },
                  "id": 1,
                  "options": {
                    "infinitePan": false,
                    "inlineEditing": true,
                    "panZoom": false,
                    "root": {
                      "background": {
                        "color": {
                          "fixed": "transparent"
                        },
                        "image": {
                          "fixed": "img/bg/openart-bob-ross-lake-cabin.png",
                          "mode": "fixed"
                        },
                        "size": "fill"
                      },
                      "border": {
                        "color": {
                          "fixed": "dark-green"
                        }
                      },
                      "elements": [
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "fill": {
                              "fixed": "#D9D9D9"
                            },
                            "path": {
                              "fixed": "img/icons/unicons/thermometer.svg",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 1",
                          "placement": {
                            "height": 50,
                            "left": 35,
                            "top": 733,
                            "width": 40
                          },
                          "type": "icon"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "fill": {
                              "fixed": "#D9D9D9"
                            },
                            "path": {
                              "fixed": "img/icons/unicons/fishing_basket.svg",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 2",
                          "placement": {
                            "height": 50,
                            "left": 261,
                            "top": 514,
                            "width": 40
                          },
                          "type": "icon"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "fill": {
                              "fixed": "#D9D9D9"
                            },
                            "path": {
                              "fixed": "img/icons/unicons/fireplace.svg",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 4",
                          "placement": {
                            "height": 50,
                            "left": 505,
                            "top": 528,
                            "width": 40
                          },
                          "type": "icon"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "blue"
                            },
                            "radius": 4,
                            "width": 1
                          },
                          "config": {
                            "align": "center",
                            "api": {
                              "contentType": "application/json",
                              "data": "{}",
                              "endpoint": "http://fisherman.localhost:80/reset",
                              "headerParams": [],
                              "method": "POST",
                              "queryParams": []
                            },
                            "color": {
                              "fixed": "blue"
                            },
                            "size": 10,
                            "style": {
                              "variant": "primary"
                            },
                            "text": {
                              "fixed": "Release Fishes",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "release_fishes_button",
                          "placement": {
                            "height": 45,
                            "left": 686,
                            "top": 16,
                            "width": 150
                          },
                          "type": "button"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "fill": {
                              "fixed": "#D9D9D9"
                            },
                            "path": {
                              "fixed": "img/icons/unicons/fishes.svg",
                              "mode": "fixed"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "fishes_icon",
                          "placement": {
                            "height": 50,
                            "left": 686,
                            "top": 11,
                            "width": 40
                          },
                          "type": "icon"
                        },
                        {
                          "background": {
                            "color": {
                              "fixed": "transparent"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "rpm": {
                              "fixed": 10,
                              "mode": "mod"
                            }
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 8",
                          "placement": {
                            "height": 155,
                            "left": 151,
                            "top": 336,
                            "width": 100
                          },
                          "type": "windTurbine"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "lake_temperature_celsius",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "#000000"
                            },
                            "size": 20,
                            "text": {
                              "field": "lake_temperature_celsius",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 9",
                          "placement": {
                            "height": 50,
                            "left": 59,
                            "top": 733,
                            "width": 92
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "fireplace_status",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "#000000"
                            },
                            "size": 20,
                            "text": {
                              "field": "fireplace_status",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 10",
                          "placement": {
                            "height": 50,
                            "left": 539,
                            "top": 528,
                            "width": 43
                          },
                          "type": "metric-value"
                        },
                        {
                          "background": {
                            "color": {
                              "field": "fish_caught_total",
                              "fixed": "#D9D9D9"
                            }
                          },
                          "border": {
                            "color": {
                              "fixed": "dark-green"
                            }
                          },
                          "config": {
                            "align": "center",
                            "color": {
                              "fixed": "#000000"
                            },
                            "size": 20,
                            "text": {
                              "field": "fish_caught_total",
                              "fixed": "",
                              "mode": "field"
                            },
                            "valign": "middle"
                          },
                          "constraint": {
                            "horizontal": "left",
                            "vertical": "top"
                          },
                          "name": "Element 11",
                          "placement": {
                            "height": 50,
                            "left": 210,
                            "top": 514,
                            "width": 59
                          },
                          "type": "metric-value"
                        }
                      ],
                      "name": "Element 1716538261122",
                      "type": "frame"
                    },
                    "showAdvancedTypes": true
                  },
                  "pluginVersion": "11.0.0",
                  "targets": [
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "lake_temperature_celsius",
                      "fullMetaSearch": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "lake-temperature",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "fireplace_status",
                      "fullMetaSearch": false,
                      "hide": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "fireplace-status",
                      "useBackend": false
                    },
                    {
                      "datasource": {
                        "type": "prometheus",
                        "uid": "PBFA97CFB590B2093"
                      },
                      "disableTextWrap": false,
                      "editorMode": "builder",
                      "expr": "fish_caught_total",
                      "fullMetaSearch": false,
                      "hide": false,
                      "includeNullMetadata": true,
                      "instant": false,
                      "legendFormat": "__auto",
                      "range": true,
                      "refId": "fishes-caught",
                      "useBackend": false
                    }
                  ],
                  "title": "Bob Ross Drawing",
                  "type": "canvas"
                }
              ],
              "refresh": "auto",
              "schemaVersion": 39,
              "tags": [],
              "templating": {
                "list": []
              },
              "time": {
                "from": "now-6h",
                "to": "now"
              },
              "timeRangeUpdatedDuringEditOrView": false,
              "timepicker": {},
              "timezone": "browser",
              "title": "Beautiful Drawing",
              "uid": "edmlwai7rbwg0a",
              "version": 5,
              "weekStart": ""
          }
      playground:
        json: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": {
                    "type": "grafana",
                    "uid": "-- Grafana --"
                  },
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "name": "Annotations & Alerts",
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "fiscalYearStartMonth": 0,
            "graphTooltip": 0,
            "links": [],
            "panels": [
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "gridPos": {
                  "h": 10,
                  "w": 14,
                  "x": 0,
                  "y": 0
                },
                "id": 1,
                "options": {
                  "code": {
                    "language": "plaintext",
                    "showLineNumbers": false,
                    "showMiniMap": false
                  },
                  "content": "# Prerequisites\n\n* Kubectl\n* in directory ./demo/img/\n\n# Get pod id env variable\n\n`export grafana_pod_id=( kubectl get pod -n monitoring | grep 'grafana' | awk 'END {print $1}' | xargs echo)`\n\n\n# Copy custom background\n\n**Only png admitted**\n\n`kubectl cp -n monitoring openart-bob-ross-lake-cabin.png $grafana_pod_id:/usr/share/grafana/public/img/bg/openart-bob-ross-lake-cabin.png`\n\n",
                  "mode": "markdown"
                },
                "pluginVersion": "11.0.0",
                "title": "Custom Background",
                "type": "text"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "gridPos": {
                  "h": 10,
                  "w": 10,
                  "x": 14,
                  "y": 0
                },
                "id": 3,
                "options": {
                  "code": {
                    "language": "plaintext",
                    "showLineNumbers": false,
                    "showMiniMap": false
                  },
                  "content": "# Prerequisites\n\n* Grafana source code\n* SVG Layering skills\n* React dev skills\n* A loooot of time\n\n# It's hard\n\nFollow this blog post: [blog post](https://volkovlabs.io/blog/pizzeria-canvas-20230723/)",
                  "mode": "markdown"
                },
                "pluginVersion": "11.0.0",
                "title": "Custom Elements",
                "type": "text"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "gridPos": {
                  "h": 10,
                  "w": 17,
                  "x": 0,
                  "y": 10
                },
                "id": 2,
                "options": {
                  "code": {
                    "language": "plaintext",
                    "showLineNumbers": false,
                    "showMiniMap": false
                  },
                  "content": "# Prerequisites\n\n* Kubectl\n* in directory ./demo/img/\n\n# Get pod id env variable\n\n`export grafana_pod_id=( kubectl get pod -n monitoring | grep 'grafana' | awk 'END {print $1}' | xargs echo)`\n\n\n# Copy custom icons\n\n`kubectl cp -n monitoring ./kube/api.svg $grafana_pod_id:/usr/share/grafana/public/img/icons/unicons/`",
                  "mode": "markdown"
                },
                "pluginVersion": "11.0.0",
                "title": "Custom Icons",
                "type": "text"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "description": "",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "thresholds"
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 10,
                  "w": 7,
                  "x": 17,
                  "y": 10
                },
                "id": 4,
                "options": {
                  "infinitePan": false,
                  "inlineEditing": true,
                  "panZoom": false,
                  "root": {
                    "background": {
                      "color": {
                        "fixed": "transparent"
                      },
                      "image": {
                        "fixed": "img/bg/bob-ross-smiling-at-you.png",
                        "mode": "fixed"
                      },
                      "size": "fill"
                    },
                    "border": {
                      "color": {
                        "fixed": "dark-green"
                      }
                    },
                    "constraint": {
                      "horizontal": "left",
                      "vertical": "top"
                    },
                    "elements": [],
                    "name": "Element 1716544439812",
                    "placement": {
                      "height": 100,
                      "left": 0,
                      "rotation": 0,
                      "top": 0,
                      "width": 100
                    },
                    "type": "frame"
                  },
                  "showAdvancedTypes": true
                },
                "pluginVersion": "11.0.0",
                "title": "Bob Ross",
                "type": "canvas"
              },
              {
                "datasource": {
                  "type": "prometheus",
                  "uid": "PBFA97CFB590B2093"
                },
                "gridPos": {
                  "h": 6,
                  "w": 24,
                  "x": 0,
                  "y": 20
                },
                "id": 5,
                "options": {
                  "code": {
                    "language": "plaintext",
                    "showLineNumbers": false,
                    "showMiniMap": false
                  },
                  "content": "<!DOCTYPE html>\n<html>\n  <body>\n    <div>\n    <input type=\"checkbox\" id=\"forms\" name=\"forms\" />\n    <label for=\"forms\">Forms</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"arrows\" name=\"arrows\" />\n    <label for=\"arrows\">Arrows</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"bg\" name=\"bg\" />\n    <label for=\"bg\">Background</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"icons\" name=\"icons\" />\n    <label for=\"icons\">Icons</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"metrics\" name=\"metrics\" />\n    <label for=\"metrics\">Metrics</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"elements\" name=\"elements\" />\n    <label for=\"elements\">Elements</label>\n  </div>\n  <div>\n    <input type=\"checkbox\" id=\"buttons\" name=\"buttons\" />\n    <label for=\"buttons\">Buttons</label>\n  </div>    \n  </body>\n</html>\n",
                  "mode": "html"
                },
                "pluginVersion": "11.0.0",
                "title": "Demo Highlights",
                "type": "text"
              }
            ],
            "schemaVersion": 39,
            "tags": [],
            "templating": {
              "list": []
            },
            "time": {
              "from": "now-6h",
              "to": "now"
            },
            "timeRangeUpdatedDuringEditOrView": false,
            "timepicker": {},
            "timezone": "browser",
            "title": "Playground",
            "uid": "ddmntshqpo83kf",
            "version": 1,
            "weekStart": ""
          }
  #   prometheus-stats:
  #     gnetId: 2
  #     revision: 2
  #     datasource: Prometheus
  #   local-dashboard:
  #     url: https://example.com/repository/test.json
  #     token: ''
  #   local-dashboard-base64:
  #     url: https://example.com/repository/test-b64.json
  #     token: ''
  #     b64content: true
  #   local-dashboard-gitlab:
  #     url: https://example.com/repository/test-gitlab.json
  #     gitlabToken: ''
  #   local-dashboard-bitbucket:
  #     url: https://example.com/repository/test-bitbucket.json
  #     bearerToken: ''
  #   local-dashboard-azure:
  #     url: https://example.com/repository/test-azure.json
  #     basic: ''
  #     acceptHeader: '*/*'

## Reference to external ConfigMap per provider. Use provider name as key and ConfigMap name as value.
## A provider dashboards must be defined either by external ConfigMaps or in values.yaml, not in both.
## ConfigMap data example:
##
## data:
##   example-dashboard.json: |
##     RAW_JSON
##
dashboardsConfigMaps: {}
#  default: ""

## Grafana's primary configuration
## NOTE: values in map will be converted to ini format
## ref: http://docs.grafana.org/installation/configuration/
##
grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ .Values.ingress.hosts | first }}{{ else }}''{{ end }}"
    root_url: http://localhost/
  live:
    max_connections: 0
  panels:
    disable_sanitize_html: "true"
## grafana Authentication can be enabled with the following values on grafana.ini
 # server:
      # The full public facing url you use in browser, used for redirects and emails
 #    root_url:
 # https://grafana.com/docs/grafana/latest/auth/github/#enable-github-in-grafana
 # auth.github:
 #    enabled: false
 #    allow_sign_up: false
 #    scopes: user:email,read:org
 #    auth_url: https://github.com/login/oauth/authorize
 #    token_url: https://github.com/login/oauth/access_token
 #    api_url: https://api.github.com/user
 #    team_ids:
 #    allowed_organizations:
 #    client_id:
 #    client_secret:
## LDAP Authentication can be enabled with the following values on grafana.ini
## NOTE: Grafana will fail to start if the value for ldap.toml is invalid
  # auth.ldap:
  #   enabled: true
  #   allow_sign_up: true
  #   config_file: /etc/grafana/ldap.toml

## Grafana's LDAP configuration
## Templated by the template in _helpers.tpl
## NOTE: To enable the grafana.ini must be configured with auth.ldap.enabled
## ref: http://docs.grafana.org/installation/configuration/#auth-ldap
## ref: http://docs.grafana.org/installation/ldap/#configuration
ldap:
  enabled: false
  # `existingSecret` is a reference to an existing secret containing the ldap configuration
  # for Grafana in a key `ldap-toml`.
  existingSecret: ""
  # `config` is the content of `ldap.toml` that will be stored in the created secret
  config: ""
  # config: |-
  #   verbose_logging = true

  #   [[servers]]
  #   host = "my-ldap-server"
  #   port = 636
  #   use_ssl = true
  #   start_tls = false
  #   ssl_skip_verify = false
  #   bind_dn = "uid=%s,ou=users,dc=myorg,dc=com"

## Grafana's SMTP configuration
## NOTE: To enable, grafana.ini must be configured with smtp.enabled
## ref: http://docs.grafana.org/installation/configuration/#smtp
smtp:
  # `existingSecret` is a reference to an existing secret containing the smtp configuration
  # for Grafana.
  existingSecret: ""
  userKey: "user"
  passwordKey: "password"

## Sidecars that collect the configmaps with specified label and stores the included files them into the respective folders
## Requires at least Grafana 5 to work and can't be used together with parameters dashboardProviders, datasources and dashboards
sidecar:
  image:
    # -- The Docker registry
    registry: quay.io
    repository: kiwigrid/k8s-sidecar
    tag: 1.26.1
    sha: ""
  imagePullPolicy: IfNotPresent
  resources: {}
#   limits:
#     cpu: 100m
#     memory: 100Mi
#   requests:
#     cpu: 50m
#     memory: 50Mi
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    seccompProfile:
      type: RuntimeDefault
  # skipTlsVerify Set to true to skip tls verification for kube api calls
  # skipTlsVerify: true
  enableUniqueFilenames: false
  readinessProbe: {}
  livenessProbe: {}
  # Log level default for all sidecars. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL. Defaults to INFO
  # logLevel: INFO
  alerts:
    enabled: false
    # Additional environment variables for the alerts sidecar
    env: {}
    # Do not reprocess already processed unchanged resources on k8s API reconnect.
    # ignoreAlreadyProcessed: true
    # label that the configmaps with alert are marked with
    label: grafana_alert
    # value of label that the configmaps with alert are set to
    labelValue: ""
    # Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.
    # logLevel: INFO
    # If specified, the sidecar will search for alert config-maps inside this namespace.
    # Otherwise the namespace in which the sidecar is running will be used.
    # It's also possible to specify ALL to search in all namespaces
    searchNamespace: null
    # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
    watchMethod: WATCH
    # search in configmap, secret or both
    resource: both
    # watchServerTimeout: request to the server, asking it to cleanly close the connection after that.
    # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S
    # watchServerTimeout: 3600
    #
    # watchClientTimeout: is a client-side timeout, configuring your local socket.
    # If you have a network outage dropping all packets with no RST/FIN,
    # this is how long your client waits before realizing & dropping the connection.
    # defaults to 66sec (sic!)
    # watchClientTimeout: 60
    #
    # Endpoint to send request to reload alerts
    reloadURL: "http://localhost:3000/api/admin/provisioning/alerting/reload"
    # Absolute path to shell script to execute after a alert got reloaded
    script: null
    skipReload: false
    # This is needed if skipReload is true, to load any alerts defined at startup time.
    # Deploy the alert sidecar as an initContainer.
    initAlerts: false
    # Additional alert sidecar volume mounts
    extraMounts: []
    # Sets the size limit of the alert sidecar emptyDir volume
    sizeLimit: {}
  dashboards:
    enabled: false
    # Additional environment variables for the dashboards sidecar
    env: {}
    # Do not reprocess already processed unchanged resources on k8s API reconnect.
    # ignoreAlreadyProcessed: true
    SCProvider: true
    # label that the configmaps with dashboards are marked with
    label: grafana_dashboard
    # value of label that the configmaps with dashboards are set to
    labelValue: ""
    # Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.
    # logLevel: INFO
    # folder in the pod that should hold the collected dashboards (unless `defaultFolderName` is set)
    folder: /tmp/dashboards
    # The default folder name, it will create a subfolder under the `folder` and put dashboards in there instead
    defaultFolderName: null
    # Namespaces list. If specified, the sidecar will search for config-maps/secrets inside these namespaces.
    # Otherwise the namespace in which the sidecar is running will be used.
    # It's also possible to specify ALL to search in all namespaces.
    searchNamespace: null
    # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
    watchMethod: WATCH
    # search in configmap, secret or both
    resource: both
    # If specified, the sidecar will look for annotation with this name to create folder and put graph here.
    # You can use this parameter together with `provider.foldersFromFilesStructure`to annotate configmaps and create folder structure.
    folderAnnotation: null
    # Endpoint to send request to reload alerts
    reloadURL: "http://localhost:3000/api/admin/provisioning/dashboards/reload"
    # Absolute path to shell script to execute after a configmap got reloaded
    script: null
    skipReload: false
    # watchServerTimeout: request to the server, asking it to cleanly close the connection after that.
    # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S
    # watchServerTimeout: 3600
    #
    # watchClientTimeout: is a client-side timeout, configuring your local socket.
    # If you have a network outage dropping all packets with no RST/FIN,
    # this is how long your client waits before realizing & dropping the connection.
    # defaults to 66sec (sic!)
    # watchClientTimeout: 60
    #
    # provider configuration that lets grafana manage the dashboards
    provider:
      # name of the provider, should be unique
      name: sidecarProvider
      # orgid as configured in grafana
      orgid: 1
      # folder in which the dashboards should be imported in grafana
      folder: ''
      # type of the provider
      type: file
      # disableDelete to activate a import-only behaviour
      disableDelete: false
      # allow updating provisioned dashboards from the UI
      allowUiUpdates: false
      # allow Grafana to replicate dashboard structure from filesystem
      foldersFromFilesStructure: false
    # Additional dashboard sidecar volume mounts
    extraMounts: []
    # Sets the size limit of the dashboard sidecar emptyDir volume
    sizeLimit: {}
  datasources:
    enabled: false
    # Additional environment variables for the datasourcessidecar
    env: {}
    envValueFrom: {}
    # Do not reprocess already processed unchanged resources on k8s API reconnect.
    # ignoreAlreadyProcessed: true
    # label that the configmaps with datasources are marked with
    label: grafana_datasource
    # value of label that the configmaps with datasources are set to
    labelValue: ""
    # Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.
    # logLevel: INFO
    # If specified, the sidecar will search for datasource config-maps inside this namespace.
    # Otherwise the namespace in which the sidecar is running will be used.
    # It's also possible to specify ALL to search in all namespaces
    searchNamespace: null
    # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
    watchMethod: WATCH
    # search in configmap, secret or both
    resource: both
    # watchServerTimeout: request to the server, asking it to cleanly close the connection after that.
    # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S
    # watchServerTimeout: 3600
    #
    # watchClientTimeout: is a client-side timeout, configuring your local socket.
    # If you have a network outage dropping all packets with no RST/FIN,
    # this is how long your client waits before realizing & dropping the connection.
    # defaults to 66sec (sic!)
    # watchClientTimeout: 60
    #
    # Endpoint to send request to reload datasources
    reloadURL: "http://localhost:3000/api/admin/provisioning/datasources/reload"
    # Absolute path to shell script to execute after a datasource got reloaded
    script: null
    skipReload: false
    # This is needed if skipReload is true, to load any datasources defined at startup time.
    # Deploy the datasources sidecar as an initContainer.
    initDatasources: false
    # Sets the size limit of the datasource sidecar emptyDir volume
    sizeLimit: {}
  plugins:
    enabled: false
    # Additional environment variables for the plugins sidecar
    env: {}
    # Do not reprocess already processed unchanged resources on k8s API reconnect.
    # ignoreAlreadyProcessed: true
    # label that the configmaps with plugins are marked with
    label: grafana_plugin
    # value of label that the configmaps with plugins are set to
    labelValue: ""
    # Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.
    # logLevel: INFO
    # If specified, the sidecar will search for plugin config-maps inside this namespace.
    # Otherwise the namespace in which the sidecar is running will be used.
    # It's also possible to specify ALL to search in all namespaces
    searchNamespace: null
    # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
    watchMethod: WATCH
    # search in configmap, secret or both
    resource: both
    # watchServerTimeout: request to the server, asking it to cleanly close the connection after that.
    # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S
    # watchServerTimeout: 3600
    #
    # watchClientTimeout: is a client-side timeout, configuring your local socket.
    # If you have a network outage dropping all packets with no RST/FIN,
    # this is how long your client waits before realizing & dropping the connection.
    # defaults to 66sec (sic!)
    # watchClientTimeout: 60
    #
    # Endpoint to send request to reload plugins
    reloadURL: "http://localhost:3000/api/admin/provisioning/plugins/reload"
    # Absolute path to shell script to execute after a plugin got reloaded
    script: null
    skipReload: false
    # Deploy the datasource sidecar as an initContainer in addition to a container.
    # This is needed if skipReload is true, to load any plugins defined at startup time.
    initPlugins: false
    # Sets the size limit of the plugin sidecar emptyDir volume
    sizeLimit: {}
  notifiers:
    enabled: false
    # Additional environment variables for the notifierssidecar
    env: {}
    # Do not reprocess already processed unchanged resources on k8s API reconnect.
    # ignoreAlreadyProcessed: true
    # label that the configmaps with notifiers are marked with
    label: grafana_notifier
    # value of label that the configmaps with notifiers are set to
    labelValue: ""
    # Log level. Can be one of: DEBUG, INFO, WARN, ERROR, CRITICAL.
    # logLevel: INFO
    # If specified, the sidecar will search for notifier config-maps inside this namespace.
    # Otherwise the namespace in which the sidecar is running will be used.
    # It's also possible to specify ALL to search in all namespaces
    searchNamespace: null
    # Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH requests, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
    watchMethod: WATCH
    # search in configmap, secret or both
    resource: both
    # watchServerTimeout: request to the server, asking it to cleanly close the connection after that.
    # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S
    # watchServerTimeout: 3600
    #
    # watchClientTimeout: is a client-side timeout, configuring your local socket.
    # If you have a network outage dropping all packets with no RST/FIN,
    # this is how long your client waits before realizing & dropping the connection.
    # defaults to 66sec (sic!)
    # watchClientTimeout: 60
    #
    # Endpoint to send request to reload notifiers
    reloadURL: "http://localhost:3000/api/admin/provisioning/notifications/reload"
    # Absolute path to shell script to execute after a notifier got reloaded
    script: null
    skipReload: false
    # Deploy the notifier sidecar as an initContainer in addition to a container.
    # This is needed if skipReload is true, to load any notifiers defined at startup time.
    initNotifiers: false
    # Sets the size limit of the notifier sidecar emptyDir volume
    sizeLimit: {}

## Override the deployment namespace
##
namespaceOverride: ""

## Number of old ReplicaSets to retain
##
revisionHistoryLimit: 10

## Add a seperate remote image renderer deployment/service
imageRenderer:
  deploymentStrategy: {}
  # Enable the image-renderer deployment & service
  enabled: false
  replicas: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPU: "60"
    targetMemory: ""
    behavior: {}
  image:
    # -- The Docker registry
    registry: docker.io
    # image-renderer Image repository
    repository: grafana/grafana-image-renderer
    # image-renderer Image tag
    tag: latest
    # image-renderer Image sha (optional)
    sha: ""
    # image-renderer ImagePullPolicy
    pullPolicy: Always
  # extra environment variables
  env:
    HTTP_HOST: "0.0.0.0"
    # RENDERING_ARGS: --no-sandbox,--disable-gpu,--window-size=1280x758
    # RENDERING_MODE: clustered
    # IGNORE_HTTPS_ERRORS: true

  ## "valueFrom" environment variable references that will be added to deployment pods. Name is templated.
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#envvarsource-v1-core
  ## Renders in container spec as:
  ##   env:
  ##     ...
  ##     - name: <key>
  ##       valueFrom:
  ##         <value rendered as YAML>
  envValueFrom: {}
    #  ENV_NAME:
    #    configMapKeyRef:
    #      name: configmap-name
    #      key: value_key

  # image-renderer deployment serviceAccount
  serviceAccountName: ""
  # image-renderer deployment securityContext
  securityContext: {}
  # image-renderer deployment container securityContext
  containerSecurityContext:
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop: ['ALL']
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
  ## image-renderer pod annotation
  podAnnotations: {}
  # image-renderer deployment Host Aliases
  hostAliases: []
  # image-renderer deployment priority class
  priorityClassName: ''
  service:
    # Enable the image-renderer service
    enabled: true
    # image-renderer service port name
    portName: 'http'
    # image-renderer service port used by both service and deployment
    port: 8081
    targetPort: 8081
    # Adds the appProtocol field to the image-renderer service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
    appProtocol: ""
  serviceMonitor:
    ## If true, a ServiceMonitor CRD is created for a prometheus operator
    ## https://github.com/coreos/prometheus-operator
    ##
    enabled: false
    path: /metrics
    #  namespace: monitoring  (defaults to use the namespace this chart is deployed to)
    labels: {}
    interval: 1m
    scheme: http
    tlsConfig: {}
    scrapeTimeout: 30s
    relabelings: []
    # See: https://doc.crds.dev/github.com/prometheus-operator/kube-prometheus/monitoring.coreos.com/ServiceMonitor/v1@v0.11.0#spec-targetLabels
    targetLabels: []
      # - targetLabel1
      # - targetLabel2
  # If https is enabled in Grafana, this needs to be set as 'https' to correctly configure the callback used in Grafana
  grafanaProtocol: http
  # In case a sub_path is used this needs to be added to the image renderer callback
  grafanaSubPath: ""
  # name of the image-renderer port on the pod
  podPortName: http
  # number of image-renderer replica sets to keep
  revisionHistoryLimit: 10
  networkPolicy:
    # Enable a NetworkPolicy to limit inbound traffic to only the created grafana pods
    limitIngress: true
    # Enable a NetworkPolicy to limit outbound traffic to only the created grafana pods
    limitEgress: false
    # Allow additional services to access image-renderer (eg. Prometheus operator when ServiceMonitor is enabled)
    extraIngressSelectors: []
  resources: {}
#   limits:
#     cpu: 100m
#     memory: 100Mi
#   requests:
#     cpu: 50m
#     memory: 50Mi
  ## Node labels for pod assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}

  ## Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Affinity for pod assignment (evaluated as template)
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName: "default-scheduler"

networkPolicy:
  ## @param networkPolicy.enabled Enable creation of NetworkPolicy resources. Only Ingress traffic is filtered for now.
  ##
  enabled: false
  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to  grafana port defined.
  ## When true, grafana will accept connections from any source
  ## (with the correct destination port).
  ##
  ingress: true
  ## @param networkPolicy.ingress When true enables the creation
  ## an ingress network policy
  ##
  allowExternal: true
  ## @param networkPolicy.explicitNamespacesSelector A Kubernetes LabelSelector to explicitly select namespaces from which traffic could be allowed
  ## If explicitNamespacesSelector is missing or set to {}, only client Pods that are in the networkPolicy's namespace
  ## and that match other criteria, the ones that have the good label, can reach the grafana.
  ## But sometimes, we want the grafana to be accessible to clients from other namespaces, in this case, we can use this
  ## LabelSelector to select these namespaces, note that the networkPolicy's namespace should also be explicitly added.
  ##
  ## Example:
  ## explicitNamespacesSelector:
  ##   matchLabels:
  ##     role: frontend
  ##   matchExpressions:
  ##    - {key: role, operator: In, values: [frontend]}
  ##
  explicitNamespacesSelector: {}
  ##
  ##
  ##
  ##
  ##
  ##
  egress:
    ## @param networkPolicy.egress.enabled When enabled, an egress network policy will be
    ## created allowing grafana to connect to external data sources from kubernetes cluster.
    enabled: false
    ##
    ## @param networkPolicy.egress.blockDNSResolution When enabled, DNS resolution will be blocked
    ## for all pods in the grafana namespace.
    blockDNSResolution: false
    ##
    ## @param networkPolicy.egress.ports Add individual ports to be allowed by the egress
    ports: []
    ## Add ports to the egress by specifying - port: <port number>
    ## E.X.
    ## - port: 80
    ## - port: 443
    ##
    ## @param networkPolicy.egress.to Allow egress traffic to specific destinations
    to: []
    ## Add destinations to the egress by specifying - ipBlock: <CIDR>
    ## E.X.
    ## to:
    ##  - namespaceSelector:
    ##    matchExpressions:
  ##    - {key: role, operator: In, values: [grafana]}
  ##
  ##
  ##
  ##
  ##

# Enable backward compatibility of kubernetes where version below 1.13 doesn't have the enableServiceLinks option
enableKubeBackwardCompatibility: false
useStatefulSet: false
# Create a dynamic manifests via values:
extraObjects: []
  # - apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: grafana-secrets
  #   spec:
  #     backendType: gcpSecretsManager
  #     data:
  #       - key: grafana-admin-password
  #         name: adminPassword

# assertNoLeakedSecrets is a helper function defined in _helpers.tpl that checks if secret
# values are not exposed in the rendered grafana.ini configmap. It is enabled by default.
#
# To pass values into grafana.ini without exposing them in a configmap, use variable expansion:
# https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#variable-expansion
#
# Alternatively, if you wish to allow secret values to be exposed in the rendered grafana.ini configmap,
# you can disable this check by setting assertNoLeakedSecrets to false.
assertNoLeakedSecrets: true
